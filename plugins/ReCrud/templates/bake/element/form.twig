{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema, modelObject) %}

            <?= $this->Form->create(${{ singularVar }}) ?>
            <fieldset>
{% for field in fields %}
{%- if field not in primaryKey %}
    {%- if keyFields[field] is defined %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.null %}
                    <?php echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true]); ?>
                    {{- "\n" }}
        {%- else %}
                    <?php echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}]); ?>
                    {{- "\n" }}
        {%- endif %}
    {%- elseif field not in ['created', 'modified', 'updated'] %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                    <?php echo $this->Form->control('{{ field }}', ['empty' => true]); ?>
                    {{- "\n" }}
        {%- else %}
                    <?php echo $this->Form->control('{{ field }}',['required' => false]); ?>
                    {{- "\n" }}
        {%- endif %}
    {%- endif %}
{%- endif %}
{%- endfor %}

{%- if associations.BelongsToMany is defined %}
{%- for assocName, assocData in associations.BelongsToMany %}
                    echo $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}]);
                    {{- "\n" }}
{%- endfor %}
{% endif %}
            </fieldset>
				<div class="text-end">
				  <?= $this->Form->button('Reset', ['type' => 'reset', 'class' => 'btn btn-outline-warning']); ?>
				  <?= $this->Form->button(__('Submit'),['type' => 'submit', 'class' => 'btn btn-outline-primary']) ?>
				  <?= $this->Form->end() ?>
                </div>